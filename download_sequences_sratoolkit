===== this commands were executed on a Linux server termianl =====

================================== install conda ==================================

wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh 
chmod +x Miniconda3-latest-Linux-x86_64.sh 
~/miniconda3/bin/condaÂ init
source ~/.bashrc

================================== create enviroment ==================================

# once we installed conda, the next step is to create an enviroment, in this case we used amplicon enviroment. For other systems refer to the oficial QIIME2 webpage:
https://docs.qiime2.org/2024.10/install/native/#activate-the-conda-environment

# now, on the server's terminal, execute:

conda env create -n qiime2-amplicon-2024.10 --file https://data.qiime2.org/distro/amplicon/qiime2-amplicon-2024.10-py310-linux-conda.yml
# note: be careful when selecting the apropiated enviroment. For example, metagenome enviroment doesn't have all the plugins requiered for processing amplicon sequences.

# activate base conda enviroment 
source ~/anaconda3/bin/activate

# activate amplicon enviroment
conda activate qiime2-amplicon-2024.10

================================== install sratoolkit ==================================

https://github.com/ncbi/sra-tools/wiki/02.-Installing-SRA-Toolkit

# the next step is to install sratoolkit, so we can download the fastq sequences 
wget --output-document sratoolkit.tar.gz https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/current/sratoolkit.current-ubuntu64.tar.gz

# extract the file 
tar -vxzf sratoolkit.tar.gz

# append the PATH
export PATH=$PWD/sratoolkit.3.2.1-ubuntu64/bin:$PATH

#
which fastq-dump

# must show something like this
/home/samaria/sratoolkit.3.2.1-ubuntu64/bin/fastq-dump

# corroborate it's been installed
fastq-dump --stdout -X 2 SRR390728

# this must show this exact output

Read 2 spots for SRR390728
Written 2 spots for SRR390728
@SRR390728.1 1 length=72
CATTCTTCACGTAGTTCTCGAGCCTTGGTTTTCAGCGATGGAGAATGACTTTGACAAGCTGAGAGAAGNTNC
+SRR390728.1 1 length=72
;;;;;;;;;;;;;;;;;;;;;;;;;;;9;;665142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;96&&&&(
@SRR390728.2 2 length=72
AAGTAGGTCTCGTCTGTGTTTTCTACGAGCTTGTGTTCCAGCTGACCCACTCCCTGGGTGGGGGGACTGGGT
+SRR390728.2 2 length=72
;;;;;;;;;;;;;;;;;4;;;;3;393.1+4&&5&&;;;;;;;;;;;;;;;;;;;;;<9;<;;;;;464262


================================== downloading files ==================================

# this will download a .sra file 
prefetch SRR12689029

# convert into a fastq doc. This will generate two files if is paird end ( _1 forward read and _2 reverse read) or a single .fastq doc if is single end 
fasterq-dump --split-3 SRR12689029.sra

================================== CASAVA formatting ==================================

# if you need to rename the files to get a CASAVA format
for prefix in SRR12802543 SRR12802544; do
    mv "${prefix}_1.fastq" "${prefix}_111_L001_R1_001.fastq"
    mv "${prefix}_2.fastq" "${prefix}_111_L001_R2_001.fastq"
done

================================== zip files ==================================

gzip *.fastq

# remove .sra files
rm *.sra

================================== multiple SRR files ==================================

# when dealing with multiple SRR files we need to create a .txt file with all the SRR 
prefetch --option-file srr_list.txt

# extract from the directories the .sra files to convert into .fastq files
find . -type f -name "*.sra" -exec mv {} . \;

# delete empy directories 
find . -type d -empty -delete

# convert into .fastq files (this will save the files into a directorie named fastq_output, but this in not necessary, we can just delete later the .sra files
fasterq-dump *.sra -O fastq_output/ --split-files

# CASAVA 1.8 format
for file in *.fastq; do
    prefix="${file%%.fastq}"
    mv "$file" "${prefix}_S111_L001_R1_001.fastq"
done

# zip files
gzip *.fastq

############ Script to run kraken2 ###################

nano run_kraken2.sh

#!/bin/bash

find . -type f -name "*.sra" -exec mv {} . \;
find . -type d -empty -delete

mkdir -p fastq_output
fasterq-dump *.sra -O fastq_output/ --split-files
gzip fastq_output/*.fastq

DB="/home/samaria/mini_kraken_database/minikraken2_v2_8GB_201904_UPDATE"
IN_DIR="/home/samaria/mtg_sequences/fastq_output"
OUT_DIR="/home/samaria/mtg_sequences/kraken_output1"
REPORT_DIR="/home/samaria/mtg_sequences/kraken_reports1"

mkdir -p "$OUT_DIR" "$REPORT_DIR"

SAMPLES=(SRR12802548 SRR12802549 SRR12802550 SRR12802551 SRR12802552 SRR12802553 SRR12802554 SRR12802555 SRR12802556 SRR12802557 SRR12802558 SRR12802559 SRR12802560 SRR12802561 SRR12802562 SRR12802563 SRR12802564 SRR12802565 SRR12802566 SRR12802567)

for SAMPLE in "${SAMPLES[@]}"
do
  kraken2 --db "$DB" \
    --paired \
    --gzip-compressed \
    --report "$REPORT_DIR/${SAMPLE}_report.txt" \
    --output "$OUT_DIR/${SAMPLE}_kraken.txt" \
    "$IN_DIR/${SAMPLE}_1.fastq.gz" "$IN_DIR/${SAMPLE}_2.fastq.gz"
done

# save the script
Ctrl + O 

# close the file
# Ctrl + X 

# run the script
chmod +x run_kraken2.sh
./run_kraken2.sh
